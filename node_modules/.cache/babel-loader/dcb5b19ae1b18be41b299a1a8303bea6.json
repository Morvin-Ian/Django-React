{"ast":null,"code":"var _jsxFileName = \"/home/morvin/Codes/Django/Django-React/react-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport { useState, useEffect } from 'react';\nimport Header from './Header';\nimport BookList from './BookList';\nimport Addbook from './Addbook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [newBook, setNewBook] = useState(\"\");\n  const [newBookDesc, setNewBookDesc] = useState(\"\");\n  const apiUrl = 'http://127.0.0.1:8000/api/book';\n  useEffect(() => {\n    getBooks();\n  }, []);\n\n  const getBooks = async () => {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    setBooks(data);\n  };\n\n  const deleteBook = async id => {\n    const listBooks = books.filter(book => book.id !== id);\n    setBooks(listBooks);\n    fetch(`${apiUrl}/delete/${id}`, {\n      method: 'DELETE',\n      'headers': {\n        'Content-Type': 'application/json'\n      }\n    });\n  }; // const createBook = async (id) => {\n  //   const listBooks = books.filter(book => book.id !== id);\n  //   setBooks(listBooks)\n  //   fetch(`${apiUrl}delete/${id}`, {\n  //     method: 'POST',\n  //     'headers': {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     body:JSON.stringify(book)\n  // })\n  // }\n\n\n  const addBook = (book_name, description) => {\n    const id = book_name.length ? books[books.length - 1].id + 1 : 1;\n    const newBook = {\n      id,\n      book_name,\n      description\n    };\n    const listBooks = [...books, newBook];\n    console.log(newBook);\n    fetch(`${apiUrl}/create`, {\n      method: 'POST',\n      'headers': {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBook)\n    });\n  };\n\n  const handlesubmit = e => {\n    e.preventDefault();\n    if (!newBook) return;\n    console.log(newBook);\n    addBook(newBook, newBookDesc);\n    setNewBook('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Addbook, {\n      newBook: newBook,\n      setNewBook: setNewBook,\n      newBookDesc: newBookDesc,\n      setNewBookDesc: setNewBookDesc,\n      handlesubmit: handlesubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      books: books,\n      setBooks: setBooks,\n      deleteBook: deleteBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"W2uhQ6jJMaT0Lg8HfC7iE8tCsCg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","BookList","Addbook","App","books","setBooks","newBook","setNewBook","newBookDesc","setNewBookDesc","apiUrl","getBooks","response","fetch","data","json","deleteBook","id","listBooks","filter","book","method","addBook","book_name","description","length","console","log","body","JSON","stringify","handlesubmit","e","preventDefault"],"sources":["/home/morvin/Codes/Django/Django-React/react-notes/src/App.js"],"sourcesContent":["import './index.css';\nimport {useState, useEffect} from 'react';\nimport Header from './Header';\nimport BookList from './BookList';\nimport Addbook from './Addbook';\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n  const [newBook, setNewBook] = useState(\"\");\n  const [newBookDesc, setNewBookDesc] = useState(\"\");\n  const apiUrl = 'http://127.0.0.1:8000/api/book'\n\n\n\n  useEffect(()=>{\n\n      getBooks();\n\n  },[])\n\n\n  const getBooks = async () => {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      setBooks(data);\n\n  }\n\n\n  const deleteBook = async (id) => {\n      const listBooks = books.filter(book => book.id !== id);\n      setBooks(listBooks)\n\n      fetch(`${apiUrl}/delete/${id}`, {\n        method: 'DELETE',\n        'headers': {\n            'Content-Type': 'application/json'\n        }\n    })\n    }\n\n    // const createBook = async (id) => {\n    //   const listBooks = books.filter(book => book.id !== id);\n    //   setBooks(listBooks)\n\n    //   fetch(`${apiUrl}delete/${id}`, {\n    //     method: 'POST',\n    //     'headers': {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body:JSON.stringify(book)\n    // })\n    // }\n\n    const addBook = (book_name, description) => {\n      const id = book_name.length ? books[books.length-1].id+1: 1;\n      const newBook = {id, book_name, description };\n      const listBooks = [...books, newBook]; \n      console.log(newBook)\n\n      fetch(`${apiUrl}/create`, {\n            method: 'POST',\n            'headers': {\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify(newBook)\n        })\n    }\n\n\n    const handlesubmit = (e) => {\n      e.preventDefault();\n      if (!newBook) return;\n      console.log(newBook)\n        addBook(newBook, newBookDesc)\n        setNewBook('')\n  \n    }\n  \n\n  return (\n        <div className=\"App\">\n\n          <Header/>\n\n          <Addbook\n            newBook={newBook}\n            setNewBook ={setNewBook}\n            newBookDesc={newBookDesc}\n            setNewBookDesc={setNewBookDesc}\n            handlesubmit ={handlesubmit}\n\n          />\n          \n          <BookList\n            books={books}\n            setBooks={setBooks}\n            deleteBook={deleteBook}\n\n          />\n        \n        \n      </div>\n    \n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}